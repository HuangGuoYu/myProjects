<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cqust.blog.dao.mappers.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.cqust.blog.common.entity.Article" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="post_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="cert_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="browse_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="comment_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="like_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="cate_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="is_original" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="is_delete" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="state" jdbcType="TINYINT" javaType="java.lang.Byte" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.cqust.blog.common.entity.Article" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="post_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="cert_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="browse_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="comment_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="like_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="cate_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="is_original" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="is_delete" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="state" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="content" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, title, post_time, cert_time, browse_num, comment_num, like_num, cate_id,
    is_original, is_delete, state, content
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_article
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectByUserIdAndArticleId" resultType="com.cqust.blog.common.entity.Article">
      SELECT <include refid="Base_Column_List"/>
      FROM tbl_article
      where id = #{aid} and user_id = #{uid}
    </select>
    <select id="queryListByState" resultType="com.cqust.blog.common.entity.Article">
      SELECT <include refid="Base_Column_List"/>
      FROM tbl_article
      where state = #{astate} and is_delete = #{dstate}
      limit #{start},10
    </select>
  <select id="queryListByStateForCount" resultType="com.cqust.blog.common.entity.Article">
    SELECT <include refid="Base_Column_List"/>
    FROM tbl_article
    where state = #{astate} and is_delete = #{dstate}
  </select>
    <select id="checkArticleByState" resultType="com.cqust.blog.common.entity.Article">
      SELECT <include refid="Base_Column_List"/>
      FROM tbl_article
      WHERE id = #{aid} and is_delete = 0 and state = 1
    </select>
  <select id="queryListForIndex" resultType="java.util.Map">
    SELECT a.*,b.blog_name,c.head_icon,DATE_FORMAT(a.post_time,'%y-%m-%d') postTime  from tbl_article a
    LEFT JOIN tbl_user b on a.user_id = b.id
    LEFT JOIN tbl_user_detail c on a.user_id = c.user_id
    where a.state = 1
    <if test="title != null">
      and a.title like CONCAT('%',#{title},'%')
    </if>
    ORDER BY browse_num desc
    LIMIT 0,10
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tbl_article
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <update id="delArticleToDelStateAndCateTo0">
      UPDATE tbl_article set is_delete = 1, cate_id = 0 where user_id=#{uid} and cate_id = #{cid}
    </update>
    <insert id="insert" parameterType="com.cqust.blog.common.entity.Article" >
    insert into tbl_article (id, user_id, title,
      post_time, cert_time, browse_num,
      comment_num, like_num, cate_id,
      is_original, is_delete, state,
      content)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR},
      #{postTime,jdbcType=TIMESTAMP}, #{certTime,jdbcType=TIMESTAMP}, #{browseNum,jdbcType=INTEGER},
      #{commentNum,jdbcType=INTEGER}, #{likeNum,jdbcType=INTEGER}, #{cateId,jdbcType=INTEGER},
      #{isOriginal,jdbcType=TINYINT}, #{isDelete,jdbcType=TINYINT}, #{state,jdbcType=TINYINT},
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cqust.blog.common.entity.Article" >
    insert into tbl_article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="postTime != null" >
        post_time,
      </if>
      <if test="certTime != null" >
        cert_time,
      </if>
      <if test="browseNum != null" >
        browse_num,
      </if>
      <if test="commentNum != null" >
        comment_num,
      </if>
      <if test="likeNum != null" >
        like_num,
      </if>
      <if test="cateId != null" >
        cate_id,
      </if>
      <if test="isOriginal != null" >
        is_original,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="postTime != null" >
        #{postTime,jdbcType=TIMESTAMP},
      </if>
      <if test="certTime != null" >
        #{certTime,jdbcType=TIMESTAMP},
      </if>
      <if test="browseNum != null" >
        #{browseNum,jdbcType=INTEGER},
      </if>
      <if test="commentNum != null" >
        #{commentNum,jdbcType=INTEGER},
      </if>
      <if test="likeNum != null" >
        #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="cateId != null" >
        #{cateId,jdbcType=INTEGER},
      </if>
      <if test="isOriginal != null" >
        #{isOriginal,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cqust.blog.common.entity.Article" >
    update tbl_article
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="postTime != null" >
        post_time = #{postTime,jdbcType=TIMESTAMP},
      </if>
      <if test="certTime != null" >
        cert_time = #{certTime,jdbcType=TIMESTAMP},
      </if>
      <if test="browseNum != null" >
        browse_num = #{browseNum,jdbcType=INTEGER},
      </if>
      <if test="commentNum != null" >
        comment_num = #{commentNum,jdbcType=INTEGER},
      </if>
      <if test="likeNum != null" >
        like_num = #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="cateId != null" >
        cate_id = #{cateId,jdbcType=INTEGER},
      </if>
      <if test="isOriginal != null" >
        is_original = #{isOriginal,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cqust.blog.common.entity.Article" >
    update tbl_article
    set user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      post_time = #{postTime,jdbcType=TIMESTAMP},
      cert_time = #{certTime,jdbcType=TIMESTAMP},
      browse_num = #{browseNum,jdbcType=INTEGER},
      comment_num = #{commentNum,jdbcType=INTEGER},
      like_num = #{likeNum,jdbcType=INTEGER},
      cate_id = #{cateId,jdbcType=INTEGER},
      is_original = #{isOriginal,jdbcType=TINYINT},
      is_delete = #{isDelete,jdbcType=TINYINT},
      state = #{state,jdbcType=TINYINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cqust.blog.common.entity.Article" >
    update tbl_article
    set user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      post_time = #{postTime,jdbcType=TIMESTAMP},
      cert_time = #{certTime,jdbcType=TIMESTAMP},
      browse_num = #{browseNum,jdbcType=INTEGER},
      comment_num = #{commentNum,jdbcType=INTEGER},
      like_num = #{likeNum,jdbcType=INTEGER},
      cate_id = #{cateId,jdbcType=INTEGER},
      is_original = #{isOriginal,jdbcType=TINYINT},
      is_delete = #{isDelete,jdbcType=TINYINT},
      state = #{state,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>